should be constant with the same seed: 1342184607
abcdefghijklmnopqrstuvwxyz
vector1: [ ]
vector2: [ 42 42 42 42 42 42 42 42 ]
vector3: [ 42 42 42 42 42 ]
vector4: [ 42 42 42 42 42 ]
vector5: [ 42 42 42 42 42 ]
v1 is empty: 1
v5 is empty: 0
v1 has size 0 and capacity 0
v5 has size 5 and capacity 5
v1 has max size of 4611686018427387903
v5 has max size of 4611686018427387903
vector5: [ 42 42 42 42 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ]
0
0
42
0
vector6: [ 100 100 100 100 100 100 100 ]
vector6: [ 42 42 0 0 0 0 0 0 0 0 ]
vector6: [ 42 42 0 0 0 0 0 0 0 ]
vector6: [ 42 0 0 0 ]
vector7: [ 99 99 84 42 84 99 99 99 99 99 ]
vector8: [ 99 99 84 42 84 99 99 99 99 99 66 97 62 28 66 57 12 ]
vector8: [ ]
vector8: [ 0 0 0 0 0 1 1 1 1 1 40 41 42 84 42 ]
vector1: [ 0 1 2 3 4 5 6 7 8 9 10 11 ]
it1 = v1.begin()
it2 = v1.begin() + 3
it3 = v1.end() - 2;

*(it1): 0
*(it1 + 1): 1
*(1 + it1): 1
*(it2 - 1): 2
*(-1 + it2): 2
*(it1++): 0 -> 1
*(it2++): 3 -> 4
*(++it1): 2 -> 2
*(++it2): 5 -> 5
*(it1--): 2 -> 1
*(it2--): 5 -> 4
*(--it1): 0 -> 0
*(--it2): 3 -> 3
*(it1 += 3): 0 -> 3
*(it2 += 3): 3 -> 6
*(it1 -= 1): 3 -> 2
*(it2 -= 1): 6 -> 5
*(it4): 5
*(it4++): 5 -> 4
*(++it4): 3 -> 3
*(it4--): 3 -> 4
*(--it4): 5 -> 5
*(it4 + 3): 2
*(it4 - 3): 8
*cit1: 0
*cit2: 3
vector1: [ 55 1 2 3 4 5 6 7 8 9 10 11 ]
vector2: [ 42 42 42 42 42 42 42 42 ]
false
true
false
true
true
false
vector1: [ 42 42 42 42 42 42 42 42 ]
vector2: [ 55 1 2 3 4 5 6 7 8 9 10 11 ]
true
false
Initial map: CPU = 10; GPU = 15; RAM = 20; 
Updated map: CPU = 25; GPU = 15; RAM = 20; SSD = 30; 
m1[UPS] = 0
Updated map: CPU = 25; GPU = 15; RAM = 20; SSD = 30; UPS = 0; 
After erase: CPU = 25; RAM = 20; SSD = 30; UPS = 0; 
m.size() = 4
Copy constructed map: CPU = 25; RAM = 20; SSD = 30; UPS = 0; 
m1 and m2 are equivalent: true
Updated map: CPU = 25; PSU = 34; Peripherals = 12; RAM = 20; SSD = 30; UPS = 0; 
m1 and m2 are equivalent: false
Swapped map: CPU = 25; RAM = 20; SSD = 30; UPS = 0; 
m3: CPU = 25; PSU = 34; Peripherals = 12; RAM = 20; SSD = 30; UPS = 0; 
Begin --- Key: CPU | Value: 25
m4: CPU = 25; PSU = 34; Peripherals = 12; RAM = 20; SSD = 30; UPS = 0; 
m4 size = 6
m4 size = 461168601842738790
m2: CPU = 25; Mousepad = 5; RAM = 20; SSD = 30; UPS = 0; 
m5: CPU = 25; Mousepad = 5; PSU = 34; Peripherals = 12; RAM = 20; SSD = 30; UPS = 0; 
m6: Mousepad = 5; PSU = 34; Peripherals = 12; RAM = 20; SSD = 30; UPS = 0; 
m2: CPU = 25; Mousepad = 5; RAM = 20; SSD = 30; UPS = 0; 
M6 size is 6
Mousepad, Peripherals, SSD, 
m6: PSU = 34; RAM = 20; UPS = 0; 
m6: CPU = 25; Mousepad = 5; PSU = 34; Peripherals = 12; RAM = 20; SSD = 30; UPS = 0; 
m6: CPU = 25; Mousepad = 5; PSU = 34; Peripherals = 12; RAM = 20; SSD = 30; UPS = 0; 
1
0
20
0
PSU = 34
Peripherals = 12
PSU = 34
Peripherals = 12
false
true
false
true
true
false
Python is lexicographically less than C: false
false
C is lexicographically less than C++: true
true
Key "SSD" is in the map: 1
false
Initial set: CPU -> GPU -> RAM -> (end)
Updated set: CPU -> GPU -> RAM -> SSD -> (end)
After erase: CPU -> RAM -> SSD -> (end)
m.size() = 3
Copy constructed set: CPU -> RAM -> SSD -> (end)
s1 and s2 are equivalent: true
Updated set: CPU -> PSU -> Peripherals -> RAM -> SSD -> (end)
s1 and s2 are equivalent: false
Swapped set: CPU -> RAM -> SSD -> (end)
Python is lexicographically less than C: false
false
C is lexicographically less than C++: true
true
Key "SSD" is in the set: 1
Key "Stereo" is in the set: 0
s3: CPU -> PSU -> Peripherals -> RAM -> SSD -> (end)
Begin --- Key: CPU
Reverse Begin --- Key: SSD
s4: CPU -> PSU -> Peripherals -> RAM -> SSD -> (end)
s4 size = 5
s4 size = 461168601842738790
s2: CPU -> RAM -> SSD -> (end)
s5: CPU -> PSU -> Peripherals -> RAM -> SSD -> (end)
s6: PSU -> Peripherals -> RAM -> SSD -> (end)
s6: Peripherals -> SSD -> (end)
s6: CPU -> PSU -> Peripherals -> RAM -> SSD -> (end)
s6: CPU -> PSU -> Peripherals -> RAM -> SSD -> (end)
stack0:
[ 4 ]
[ 3 ]
[ 2 ]
[ 1 ]
stack1:
[ 4 ]
[ 3 ]
[ 2 ]
[ 1 ]
stack2:
[ 4 ]
[ 3 ]
[ 2 ]
[ 1 ]
4
3
2
Stack2 is empty: true
Stack0 is empty: false
Stack2 size: 0
Stack0 size: 4
false
true
false
false
true
true
Executed in 5 seconds
